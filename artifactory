node('slave1') {
   def mvnHome
   stage('Preparation') { // for display purposes
      // Get some code from a GitHub repository
     git 'https://github.com/jglick/simple-maven-project-with-tests.git'
       //git 'https://github.com/venkatpandiri1/my-app.git'
      // Get the Maven tool.
      // ** NOTE: This 'M3' Maven tool must be configured
      // **       in the global configuration.           
      mvnHome = tool 'maven'
   }
   stage('Build') {
      // Run the maven build
      if (isUnix()) {
        sh "'${mvnHome}/bin/mvn' -Dmaven.test.failure.ignore clean package" 
         //sonar:sonar -Dsonar.host.url=http://http://ec2-54-161-114-188.compute-1.amazonaws.com:9000"
          //sh "'${mvnHome}/bin/mvn' -Pmyapp-deploy -Dmaven.test.failure.ignore clean install sonar:sonar"
      } else {
         bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
      }
   }
   stage('Upload'){
   
      dir("${workspace}")
      {
           
       def server = Artifactory.server 'artifactoryServer'
       
       def uploadSpec = """{
        "files": [
          {
            "pattern": "${workspace}/target/*.jar",
            "target": "generic-local/"
          }
       ]
      }"""
      def uploadbuild = server.upload spec:uploadSpec
      println "${uploadbuild}"
       } 
      
      }
      stage('Download')
      {
      node('master')
      {
       def server = Artifactory.server 'artifactoryServer'
      def downloadSpec = """{
       "files": [
        {
            "pattern": "generic-local/*.jar",
            "target": "/opt/"
          }
       ]
      }"""
      server.download(downloadSpec)
      }
      }
   stage('Results') {
      junit '**/target/surefire-reports/TEST-*.xml'
      archive 'target/*.jar'
   }
}
